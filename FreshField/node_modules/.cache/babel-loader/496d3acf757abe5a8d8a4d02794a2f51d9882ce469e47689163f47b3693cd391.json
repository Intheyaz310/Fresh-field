{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saiteja puttapaka\\\\Documents\\\\FreshField\\\\FreshField\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const [isCartOpen, setIsCartOpen] = useState(false);\n\n  // Load cart from localStorage on app load\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      try {\n        setCart(JSON.parse(savedCart));\n      } catch (error) {\n        console.error('Error parsing saved cart:', error);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }, [cart]);\n  const addToCart = product => {\n    setCart(prevCart => {\n      const existingItem = prevCart.find(item => item.id === product.id);\n      if (existingItem) {\n        return prevCart.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        return [...prevCart, {\n          ...product,\n          quantity: 1\n        }];\n      }\n    });\n  };\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\n  };\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCart(prevCart => prevCart.map(item => item.id === productId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n  const clearCart = () => {\n    setCart([]);\n  };\n  const getCartTotal = () => {\n    return cart.reduce((total, item) => {\n      const price = parseFloat(item.price.replace('₹', '').replace(',', ''));\n      return total + price * item.quantity;\n    }, 0);\n  };\n  const getCartCount = () => {\n    return cart.reduce((count, item) => count + item.quantity, 0);\n  };\n  const value = {\n    cart,\n    isCartOpen,\n    setIsCartOpen,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getCartCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"2/V+QiXWBTaM42Ck0ZzlOEhV5q4=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cart","setCart","isCartOpen","setIsCartOpen","savedCart","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addToCart","product","prevCart","existingItem","find","item","id","map","quantity","removeFromCart","productId","filter","updateQuantity","clearCart","getCartTotal","reduce","total","price","parseFloat","replace","getCartCount","count","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/saiteja puttapaka/Documents/FreshField/FreshField/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [isCartOpen, setIsCartOpen] = useState(false);\r\n\r\n  // Load cart from localStorage on app load\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      try {\r\n        setCart(JSON.parse(savedCart));\r\n      } catch (error) {\r\n        console.error('Error parsing saved cart:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  const addToCart = (product) => {\r\n    setCart(prevCart => {\r\n      const existingItem = prevCart.find(item => item.id === product.id);\r\n      if (existingItem) {\r\n        return prevCart.map(item =>\r\n          item.id === product.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n      } else {\r\n        return [...prevCart, { ...product, quantity: 1 }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\r\n  };\r\n\r\n  const updateQuantity = (productId, quantity) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId);\r\n      return;\r\n    }\r\n    setCart(prevCart =>\r\n      prevCart.map(item =>\r\n        item.id === productId ? { ...item, quantity } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  const getCartTotal = () => {\r\n    return cart.reduce((total, item) => {\r\n      const price = parseFloat(item.price.replace('₹', '').replace(',', ''));\r\n      return total + (price * item.quantity);\r\n    }, 0);\r\n  };\r\n\r\n  const getCartCount = () => {\r\n    return cart.reduce((count, item) => count + item.quantity, 0);\r\n  };\r\n\r\n  const value = {\r\n    cart,\r\n    isCartOpen,\r\n    setIsCartOpen,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getCartTotal,\r\n    getCartCount,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACb,IAAI;QACFH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACApB,SAAS,CAAC,MAAM;IACdgB,YAAY,CAACM,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACZ,IAAI,CAAC,CAAC;EACpD,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMa,SAAS,GAAIC,OAAO,IAAK;IAC7Bb,OAAO,CAACc,QAAQ,IAAI;MAClB,MAAMC,YAAY,GAAGD,QAAQ,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MAClE,IAAIH,YAAY,EAAE;QAChB,OAAOD,QAAQ,CAACK,GAAG,CAACF,IAAI,IACtBA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,GAClB;UAAE,GAAGD,IAAI;UAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;QAAE,CAAC,GACxCH,IACN,CAAC;MACH,CAAC,MAAM;QACL,OAAO,CAAC,GAAGH,QAAQ,EAAE;UAAE,GAAGD,OAAO;UAAEO,QAAQ,EAAE;QAAE,CAAC,CAAC;MACnD;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,cAAc,GAAIC,SAAS,IAAK;IACpCtB,OAAO,CAACc,QAAQ,IAAIA,QAAQ,CAACS,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKI,SAAS,CAAC,CAAC;EACrE,CAAC;EAED,MAAME,cAAc,GAAGA,CAACF,SAAS,EAAEF,QAAQ,KAAK;IAC9C,IAAIA,QAAQ,IAAI,CAAC,EAAE;MACjBC,cAAc,CAACC,SAAS,CAAC;MACzB;IACF;IACAtB,OAAO,CAACc,QAAQ,IACdA,QAAQ,CAACK,GAAG,CAACF,IAAI,IACfA,IAAI,CAACC,EAAE,KAAKI,SAAS,GAAG;MAAE,GAAGL,IAAI;MAAEG;IAAS,CAAC,GAAGH,IAClD,CACF,CAAC;EACH,CAAC;EAED,MAAMQ,SAAS,GAAGA,CAAA,KAAM;IACtBzB,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,MAAM0B,YAAY,GAAGA,CAAA,KAAM;IACzB,OAAO3B,IAAI,CAAC4B,MAAM,CAAC,CAACC,KAAK,EAAEX,IAAI,KAAK;MAClC,MAAMY,KAAK,GAAGC,UAAU,CAACb,IAAI,CAACY,KAAK,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;MACtE,OAAOH,KAAK,GAAIC,KAAK,GAAGZ,IAAI,CAACG,QAAS;IACxC,CAAC,EAAE,CAAC,CAAC;EACP,CAAC;EAED,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzB,OAAOjC,IAAI,CAAC4B,MAAM,CAAC,CAACM,KAAK,EAAEhB,IAAI,KAAKgB,KAAK,GAAGhB,IAAI,CAACG,QAAQ,EAAE,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMc,KAAK,GAAG;IACZnC,IAAI;IACJE,UAAU;IACVC,aAAa;IACbU,SAAS;IACTS,cAAc;IACdG,cAAc;IACdC,SAAS;IACTC,YAAY;IACZM;EACF,CAAC;EAED,oBACE1C,OAAA,CAACC,WAAW,CAAC4C,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAArC,QAAA,EAChCA;EAAQ;IAAAuC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzC,GAAA,CApFWF,YAAY;AAAA4C,EAAA,GAAZ5C,YAAY;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}