{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport const useLocation = () => {\n  _s();\n  const [location, setLocation] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Load saved location from localStorage on mount\n  useEffect(() => {\n    const savedLocation = localStorage.getItem('dairy-user-location');\n    if (savedLocation) {\n      try {\n        setLocation(JSON.parse(savedLocation));\n      } catch (err) {\n        console.error('Error loading saved location:', err);\n      }\n    }\n  }, []);\n  const detectLocation = async () => {\n    setLoading(true);\n    setError('');\n    if (!navigator.geolocation) {\n      setError('Geolocation is not supported by your browser.');\n      setLoading(false);\n      return null;\n    }\n    try {\n      const position = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 60000\n        });\n      });\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      const locationData = await reverseGeocode(latitude, longitude);\n      return locationData;\n    } catch (err) {\n      setError('Unable to detect your location. Please try manually entering your location.');\n      setLoading(false);\n      return null;\n    }\n  };\n  const reverseGeocode = async (lat, lng) => {\n    try {\n      var _data$address, _data$address2, _data$address3, _data$address4;\n      // Using OpenStreetMap Nominatim API (free, no API key required)\n      const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&zoom=10&addressdetails=1`);\n      const data = await response.json();\n      const city = ((_data$address = data.address) === null || _data$address === void 0 ? void 0 : _data$address.city) || ((_data$address2 = data.address) === null || _data$address2 === void 0 ? void 0 : _data$address2.town) || ((_data$address3 = data.address) === null || _data$address3 === void 0 ? void 0 : _data$address3.state) || 'Unknown City';\n      const state = ((_data$address4 = data.address) === null || _data$address4 === void 0 ? void 0 : _data$address4.state) || '';\n      const fullLocation = state ? `${city}, ${state}` : city;\n      const locationData = {\n        city,\n        state,\n        fullLocation,\n        coordinates: {\n          lat,\n          lng\n        },\n        timestamp: new Date().toISOString()\n      };\n      setLocation(locationData);\n      localStorage.setItem('dairy-user-location', JSON.stringify(locationData));\n      setLoading(false);\n      return locationData;\n    } catch (err) {\n      setError('Unable to get location details. Please try manually entering your location.');\n      setLoading(false);\n      return null;\n    }\n  };\n  const setManualLocation = locationData => {\n    setLocation(locationData);\n    localStorage.setItem('dairy-user-location', JSON.stringify(locationData));\n  };\n  const clearLocation = () => {\n    setLocation(null);\n    localStorage.removeItem('dairy-user-location');\n  };\n  return {\n    location,\n    loading,\n    error,\n    detectLocation,\n    setManualLocation,\n    clearLocation,\n    setError\n  };\n};\n_s(useLocation, \"TNItL81bK0+gaTx3IcxYrkQWWyA=\");","map":{"version":3,"names":["useState","useEffect","useLocation","_s","location","setLocation","loading","setLoading","error","setError","savedLocation","localStorage","getItem","JSON","parse","err","console","detectLocation","navigator","geolocation","position","Promise","resolve","reject","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","latitude","longitude","coords","locationData","reverseGeocode","lat","lng","_data$address","_data$address2","_data$address3","_data$address4","response","fetch","data","json","city","address","town","state","fullLocation","coordinates","timestamp","Date","toISOString","setItem","stringify","setManualLocation","clearLocation","removeItem"],"sources":["C:/Users/madhu/OneDrive/Desktop/FreshField/src/hooks/useLocation.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport const useLocation = () => {\r\n  const [location, setLocation] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // Load saved location from localStorage on mount\r\n  useEffect(() => {\r\n    const savedLocation = localStorage.getItem('dairy-user-location');\r\n    if (savedLocation) {\r\n      try {\r\n        setLocation(JSON.parse(savedLocation));\r\n      } catch (err) {\r\n        console.error('Error loading saved location:', err);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const detectLocation = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    if (!navigator.geolocation) {\r\n      setError('Geolocation is not supported by your browser.');\r\n      setLoading(false);\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const position = await new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\r\n          enableHighAccuracy: true,\r\n          timeout: 10000,\r\n          maximumAge: 60000\r\n        });\r\n      });\r\n\r\n      const { latitude, longitude } = position.coords;\r\n      const locationData = await reverseGeocode(latitude, longitude);\r\n      return locationData;\r\n    } catch (err) {\r\n      setError('Unable to detect your location. Please try manually entering your location.');\r\n      setLoading(false);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const reverseGeocode = async (lat, lng) => {\r\n    try {\r\n      // Using OpenStreetMap Nominatim API (free, no API key required)\r\n      const response = await fetch(\r\n        `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&zoom=10&addressdetails=1`\r\n      );\r\n      const data = await response.json();\r\n      \r\n      const city = data.address?.city || data.address?.town || data.address?.state || 'Unknown City';\r\n      const state = data.address?.state || '';\r\n      const fullLocation = state ? `${city}, ${state}` : city;\r\n      \r\n      const locationData = {\r\n        city,\r\n        state,\r\n        fullLocation,\r\n        coordinates: { lat, lng },\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      \r\n      setLocation(locationData);\r\n      localStorage.setItem('dairy-user-location', JSON.stringify(locationData));\r\n      setLoading(false);\r\n      return locationData;\r\n    } catch (err) {\r\n      setError('Unable to get location details. Please try manually entering your location.');\r\n      setLoading(false);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const setManualLocation = (locationData) => {\r\n    setLocation(locationData);\r\n    localStorage.setItem('dairy-user-location', JSON.stringify(locationData));\r\n  };\r\n\r\n  const clearLocation = () => {\r\n    setLocation(null);\r\n    localStorage.removeItem('dairy-user-location');\r\n  };\r\n\r\n  return {\r\n    location,\r\n    loading,\r\n    error,\r\n    detectLocation,\r\n    setManualLocation,\r\n    clearLocation,\r\n    setError\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}