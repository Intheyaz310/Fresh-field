{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext();export const useCart=()=>{const context=useContext(CartContext);if(!context){throw new Error('useCart must be used within a CartProvider');}return context;};export const CartProvider=_ref=>{let{children}=_ref;const[cart,setCart]=useState([]);const[isCartOpen,setIsCartOpen]=useState(false);// Load cart from localStorage on app load\nuseEffect(()=>{const savedCart=localStorage.getItem('cart');if(savedCart){try{setCart(JSON.parse(savedCart));}catch(error){console.error('Error parsing saved cart:',error);}}},[]);// Save cart to localStorage whenever it changes\nuseEffect(()=>{localStorage.setItem('cart',JSON.stringify(cart));},[cart]);const addToCart=product=>{setCart(prevCart=>{const existingItem=prevCart.find(item=>item.id===product.id);if(existingItem){return prevCart.map(item=>item.id===product.id?{...item,quantity:item.quantity+1}:item);}else{return[...prevCart,{...product,quantity:1}];}});};const removeFromCart=productId=>{setCart(prevCart=>prevCart.filter(item=>item.id!==productId));};const updateQuantity=(productId,quantity)=>{if(quantity<=0){removeFromCart(productId);return;}setCart(prevCart=>prevCart.map(item=>item.id===productId?{...item,quantity}:item));};const clearCart=()=>{setCart([]);};const getCartTotal=()=>{return cart.reduce((total,item)=>{const price=parseFloat(item.price.replace('₹','').replace(',',''));return total+price*item.quantity;},0);};const getCartCount=()=>{return cart.reduce((count,item)=>count+item.quantity,0);};const value={cart,isCartOpen,setIsCartOpen,addToCart,removeFromCart,updateQuantity,clearCart,getCartTotal,getCartCount};return/*#__PURE__*/_jsx(CartContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","CartContext","useCart","context","Error","CartProvider","_ref","children","cart","setCart","isCartOpen","setIsCartOpen","savedCart","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addToCart","product","prevCart","existingItem","find","item","id","map","quantity","removeFromCart","productId","filter","updateQuantity","clearCart","getCartTotal","reduce","total","price","parseFloat","replace","getCartCount","count","value","Provider"],"sources":["C:/Users/nanan/OneDrive/Desktop/FreshField (2)/FreshField/FreshField/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [isCartOpen, setIsCartOpen] = useState(false);\r\n\r\n  // Load cart from localStorage on app load\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      try {\r\n        setCart(JSON.parse(savedCart));\r\n      } catch (error) {\r\n        console.error('Error parsing saved cart:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  const addToCart = (product) => {\r\n    setCart(prevCart => {\r\n      const existingItem = prevCart.find(item => item.id === product.id);\r\n      if (existingItem) {\r\n        return prevCart.map(item =>\r\n          item.id === product.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n      } else {\r\n        return [...prevCart, { ...product, quantity: 1 }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\r\n  };\r\n\r\n  const updateQuantity = (productId, quantity) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId);\r\n      return;\r\n    }\r\n    setCart(prevCart =>\r\n      prevCart.map(item =>\r\n        item.id === productId ? { ...item, quantity } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  const getCartTotal = () => {\r\n    return cart.reduce((total, item) => {\r\n      const price = parseFloat(item.price.replace('₹', '').replace(',', ''));\r\n      return total + (price * item.quantity);\r\n    }, 0);\r\n  };\r\n\r\n  const getCartCount = () => {\r\n    return cart.reduce((count, item) => count + item.quantity, 0);\r\n  };\r\n\r\n  const value = {\r\n    cart,\r\n    isCartOpen,\r\n    setIsCartOpen,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getCartTotal,\r\n    getCartCount,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}