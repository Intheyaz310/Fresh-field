{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nanan\\\\OneDrive\\\\Desktop\\\\FreshField (2)\\\\FreshField\\\\FreshField\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [selectedBranch, setSelectedBranch] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n\n  // Check for existing login state on app load\n  useEffect(() => {\n    const savedLogin = localStorage.getItem('isLoggedIn');\n    const savedUser = localStorage.getItem('userEmail');\n    const savedBranch = localStorage.getItem('selectedBranch');\n    const savedLocation = localStorage.getItem('userLocation');\n    if (savedLogin === 'true' && savedUser) {\n      setIsLoggedIn(true);\n      setUser({\n        email: savedUser\n      });\n    }\n    if (savedBranch) {\n      try {\n        setSelectedBranch(JSON.parse(savedBranch));\n      } catch (error) {\n        console.error('Error parsing saved branch:', error);\n      }\n    }\n    if (savedLocation) {\n      try {\n        setUserLocation(JSON.parse(savedLocation));\n      } catch (error) {\n        console.error('Error parsing saved location:', error);\n      }\n    }\n  }, []);\n  const login = userData => {\n    setIsLoggedIn(true);\n    setUser(userData);\n    localStorage.setItem('isLoggedIn', 'true');\n    localStorage.setItem('userEmail', userData.email);\n  };\n  const logout = () => {\n    setIsLoggedIn(false);\n    setUser(null);\n    setSelectedBranch(null);\n    setUserLocation(null);\n    localStorage.removeItem('isLoggedIn');\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('selectedBranch');\n    localStorage.removeItem('userLocation');\n    localStorage.removeItem('rememberMe');\n  };\n  const selectBranch = branch => {\n    setSelectedBranch(branch);\n    localStorage.setItem('selectedBranch', JSON.stringify(branch));\n  };\n  const updateUserLocation = location => {\n    setUserLocation(location);\n    localStorage.setItem('userLocation', JSON.stringify(location));\n  };\n  const value = {\n    isLoggedIn,\n    user,\n    selectedBranch,\n    userLocation,\n    login,\n    logout,\n    selectBranch,\n    updateUserLocation\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Peu7JLGmm9TjmA7kk+Twbm3TaBU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isLoggedIn","setIsLoggedIn","user","setUser","selectedBranch","setSelectedBranch","userLocation","setUserLocation","savedLogin","localStorage","getItem","savedUser","savedBranch","savedLocation","email","JSON","parse","error","console","login","userData","setItem","logout","removeItem","selectBranch","branch","stringify","updateUserLocation","location","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nanan/OneDrive/Desktop/FreshField (2)/FreshField/FreshField/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n\r\n  // Check for existing login state on app load\r\n  useEffect(() => {\r\n    const savedLogin = localStorage.getItem('isLoggedIn');\r\n    const savedUser = localStorage.getItem('userEmail');\r\n    const savedBranch = localStorage.getItem('selectedBranch');\r\n    const savedLocation = localStorage.getItem('userLocation');\r\n\r\n    if (savedLogin === 'true' && savedUser) {\r\n      setIsLoggedIn(true);\r\n      setUser({ email: savedUser });\r\n    }\r\n\r\n    if (savedBranch) {\r\n      try {\r\n        setSelectedBranch(JSON.parse(savedBranch));\r\n      } catch (error) {\r\n        console.error('Error parsing saved branch:', error);\r\n      }\r\n    }\r\n\r\n    if (savedLocation) {\r\n      try {\r\n        setUserLocation(JSON.parse(savedLocation));\r\n      } catch (error) {\r\n        console.error('Error parsing saved location:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n    setIsLoggedIn(true);\r\n    setUser(userData);\r\n    localStorage.setItem('isLoggedIn', 'true');\r\n    localStorage.setItem('userEmail', userData.email);\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsLoggedIn(false);\r\n    setUser(null);\r\n    setSelectedBranch(null);\r\n    setUserLocation(null);\r\n    localStorage.removeItem('isLoggedIn');\r\n    localStorage.removeItem('userEmail');\r\n    localStorage.removeItem('selectedBranch');\r\n    localStorage.removeItem('userLocation');\r\n    localStorage.removeItem('rememberMe');\r\n  };\r\n\r\n  const selectBranch = (branch) => {\r\n    setSelectedBranch(branch);\r\n    localStorage.setItem('selectedBranch', JSON.stringify(branch));\r\n  };\r\n\r\n  const updateUserLocation = (location) => {\r\n    setUserLocation(location);\r\n    localStorage.setItem('userLocation', JSON.stringify(location));\r\n  };\r\n\r\n  const value = {\r\n    isLoggedIn,\r\n    user,\r\n    selectedBranch,\r\n    userLocation,\r\n    login,\r\n    logout,\r\n    selectBranch,\r\n    updateUserLocation,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}