{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nanan\\\\OneDrive\\\\Desktop\\\\FreshField (2)\\\\FreshField\\\\FreshField\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport ApiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [selectedBranch, setSelectedBranch] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n\n  // Check for existing login state on app load\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        // Check if user is authenticated using API service\n        if (ApiService.isAuthenticated()) {\n          const currentUser = ApiService.getCurrentUser();\n          if (currentUser) {\n            setIsLoggedIn(true);\n            setUser(currentUser);\n          }\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        // Clear invalid auth data\n        ApiService.logout();\n      }\n    };\n    checkAuthStatus();\n\n    // Load saved branch and location\n    const savedBranch = localStorage.getItem('selectedBranch');\n    const savedLocation = localStorage.getItem('userLocation');\n    if (savedBranch) {\n      try {\n        setSelectedBranch(JSON.parse(savedBranch));\n      } catch (error) {\n        console.error('Error parsing saved branch:', error);\n      }\n    }\n    if (savedLocation) {\n      try {\n        setUserLocation(JSON.parse(savedLocation));\n      } catch (error) {\n        console.error('Error parsing saved location:', error);\n      }\n    }\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await ApiService.login(credentials);\n      setIsLoggedIn(true);\n      setUser(response.user);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await ApiService.register(userData);\n      setIsLoggedIn(true);\n      setUser(response.user);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    setIsLoggedIn(false);\n    setUser(null);\n    setSelectedBranch(null);\n    setUserLocation(null);\n    ApiService.logout();\n    localStorage.removeItem('selectedBranch');\n    localStorage.removeItem('userLocation');\n    localStorage.removeItem('rememberMe');\n  };\n  const selectBranch = branch => {\n    setSelectedBranch(branch);\n    localStorage.setItem('selectedBranch', JSON.stringify(branch));\n  };\n  const updateUserLocation = location => {\n    setUserLocation(location);\n    localStorage.setItem('userLocation', JSON.stringify(location));\n  };\n  const value = {\n    isLoggedIn,\n    user,\n    selectedBranch,\n    userLocation,\n    login,\n    register,\n    logout,\n    selectBranch,\n    updateUserLocation\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Peu7JLGmm9TjmA7kk+Twbm3TaBU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","ApiService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isLoggedIn","setIsLoggedIn","user","setUser","selectedBranch","setSelectedBranch","userLocation","setUserLocation","checkAuthStatus","isAuthenticated","currentUser","getCurrentUser","error","console","logout","savedBranch","localStorage","getItem","savedLocation","JSON","parse","login","credentials","response","register","userData","removeItem","selectBranch","branch","setItem","stringify","updateUserLocation","location","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nanan/OneDrive/Desktop/FreshField (2)/FreshField/FreshField/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport ApiService from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n\r\n  // Check for existing login state on app load\r\n  useEffect(() => {\r\n    const checkAuthStatus = async () => {\r\n      try {\r\n        // Check if user is authenticated using API service\r\n        if (ApiService.isAuthenticated()) {\r\n          const currentUser = ApiService.getCurrentUser();\r\n          if (currentUser) {\r\n            setIsLoggedIn(true);\r\n            setUser(currentUser);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth check failed:', error);\r\n        // Clear invalid auth data\r\n        ApiService.logout();\r\n      }\r\n    };\r\n\r\n    checkAuthStatus();\r\n\r\n    // Load saved branch and location\r\n    const savedBranch = localStorage.getItem('selectedBranch');\r\n    const savedLocation = localStorage.getItem('userLocation');\r\n\r\n    if (savedBranch) {\r\n      try {\r\n        setSelectedBranch(JSON.parse(savedBranch));\r\n      } catch (error) {\r\n        console.error('Error parsing saved branch:', error);\r\n      }\r\n    }\r\n\r\n    if (savedLocation) {\r\n      try {\r\n        setUserLocation(JSON.parse(savedLocation));\r\n      } catch (error) {\r\n        console.error('Error parsing saved location:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await ApiService.login(credentials);\r\n      setIsLoggedIn(true);\r\n      setUser(response.user);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await ApiService.register(userData);\r\n      setIsLoggedIn(true);\r\n      setUser(response.user);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsLoggedIn(false);\r\n    setUser(null);\r\n    setSelectedBranch(null);\r\n    setUserLocation(null);\r\n    ApiService.logout();\r\n    localStorage.removeItem('selectedBranch');\r\n    localStorage.removeItem('userLocation');\r\n    localStorage.removeItem('rememberMe');\r\n  };\r\n\r\n  const selectBranch = (branch) => {\r\n    setSelectedBranch(branch);\r\n    localStorage.setItem('selectedBranch', JSON.stringify(branch));\r\n  };\r\n\r\n  const updateUserLocation = (location) => {\r\n    setUserLocation(location);\r\n    localStorage.setItem('userLocation', JSON.stringify(location));\r\n  };\r\n\r\n  const value = {\r\n    isLoggedIn,\r\n    user,\r\n    selectedBranch,\r\n    userLocation,\r\n    login,\r\n    register,\r\n    logout,\r\n    selectBranch,\r\n    updateUserLocation,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}